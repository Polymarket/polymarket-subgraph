specVersion: 0.0.4
description: PnL Subgraph
repository: https://github.com/polymarket/polymarket-subgraph
schema:
  file: ./schema.graphql
features:
  - grafting
dataSources:
  - kind: ethereum/contract
    name: ConditionalTokens
    network: {{ networkName }}
    source:
      address: '{{ contracts.ConditionalTokens.address }}'
      abi: ConditionalTokens
      startBlock: {{ contracts.ConditionalTokens.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserPosition
        - Condition
      abis:
        - name: ConditionalTokens
          file: ../abis/ConditionalTokens.json
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
      file: ./src/ConditionalTokensMapping.ts
  - kind: ethereum/contract
    name: Exchange
    network: {{ networkName }}
    source:
      address: '{{ contracts.Exchange.address }}'
      abi: Exchange
      startBlock: {{ contracts.Exchange.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserPosition
        - Condition
      abis:
        - name: Exchange
          file: ../abis/Exchange.json
      eventHandlers:
        - event: OrderFilled(indexed bytes32,indexed address,indexed address,uint256,uint256,uint256,uint256,uint256)
          handler: handleOrderFilled
      file: ./src/ExchangeMapping.ts
  - kind: ethereum/contract
    name: NegRiskExchange
    network: {{ networkName }}
    source:
      address: '{{ contracts.NegRiskExchange.address }}'
      abi: Exchange
      startBlock: {{ contracts.NegRiskExchange.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - UserPosition
        - Condition
      abis:
        - name: Exchange
          file: ../abis/Exchange.json
      eventHandlers:
        - event: OrderFilled(indexed bytes32,indexed address,indexed address,uint256,uint256,uint256,uint256,uint256)
          handler: handleOrderFilled
      file: ./src/ExchangeMapping.ts
  - kind: ethereum/contract
    name: FixedProductMarketMakerFactory
    network: {{ networkName }}
    source:
      address: '{{ contracts.FixedProductMarketMakerFactory.address }}'
      abi: FixedProductMarketMakerFactory
      startBlock: {{ contracts.FixedProductMarketMakerFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
      abis:
        - name: FixedProductMarketMakerFactory
          file: ../abis/FixedProductMarketMakerFactory.json
      eventHandlers:
        - event: FixedProductMarketMakerCreation(indexed address,address,indexed address,indexed address,bytes32[],uint256)
          handler: handleFixedProductMarketMakerCreation
      file: ./src/FixedProductMarketMakerFactoryMapping.ts
templates:
  - name: ERC20Detailed
    kind: ethereum/contract
    network: {{ networkName }}
    source:
      abi: ERC20Detailed
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
        - FpmmFundingAddition
        - FpmmFundingRemoval
        - FpmmPoolMembership
        - FpmmTransaction
      abis:
        - name: ERC20Detailed
          file: ../abis/ERC20Detailed.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handlePoolShareTransfer
      file: ./src/FixedProductMarketMakerMapping.ts